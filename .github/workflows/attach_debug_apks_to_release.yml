name: Attach Debug APKs To Release

on:
  release:
    types:
      - published

jobs:
  attach-apks:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          ref: ${{ env.GITHUB_REF }}
      - name: Set vars
        run: |
          RELEASE_VERSION_NAME="${GITHUB_REF/refs\/tags\//}"
          if ! printf "%s" "${RELEASE_VERSION_NAME/v/}" | grep -qP '^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$'; then
            echo "The versionName '${RELEASE_VERSION_NAME/v/}' is not a valid version as per semantic version '2.0.0' spec in the format 'major.minor.patch(-prerelease)(+buildmetadata)'. https://semver.org/spec/v2.0.0.html."
            exit 1
          fi
          echo "TERMUX_API_RELEASE_TAG=$RELEASE_VERSION_NAME" >> $GITHUB_ENV
          echo "TERMUX_API_APK_VERSION_TAG=$RELEASE_VERSION_NAME+github-debug" >> $GITHUB_ENV # Used by app/build.gradle
      - name: Echo release
        run: echo "Attaching debug APK to '${{ env.TERMUX_API_RELEASE_TAG }}' release"
      - name: Build
        run: ./gradlew assembleDebug
      - name: Attach APKs to release
        run: >-
          hub release edit
          -m ""
          -a "./app/build/outputs/apk/debug/termux-api_${{ env.TERMUX_API_APK_VERSION_TAG }}.apk"
          "${{ env.TERMUX_API_RELEASE_TAG }}"
